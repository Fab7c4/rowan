@misc{pyquat,
    author = "Kieran Wynn",
    title = "pyquaternion",
    year = "2015",
    url = "https://github.com/KieranWynn/pyquaternion"
  },
@misc{transforms3d,
    author = "Matthew Brett and Christoph Gohlke",
    title = "transforms3d",
    year = "2009",
    url = "https://github.com/matthew-brett/transforms3d"
  }
@misc{npquat,
    author = "Michael Boyle",
    title = "numpy-quaternion",
    year = "2017",
    url = "https://github.com/moble/quaternion"
  }
@misc{plato,
    author = "Matthew Spellings",
    title = "plato",
    year = "2018",
    url = "https://bitbucket.org/glotzer/plato"
  }
@article{Anderson2008c,
abstract = {Graphics processing units (GPUs), originally developed for rendering real-time effects in computer games, now provide unprecedented computational power for scientific applications. In this paper, we develop a general purpose molecular dynamics code that runs entirely on a single GPU. It is shown that our GPU implementation provides a performance equivalent to that of fast 30 processor core distributed memory cluster. Our results show that GPUs already provide an inexpensive alternative to such clusters and discuss implications for the future. {\textcopyright} 2008 Elsevier Inc. All rights reserved.},
author = {Anderson, Joshua A. and Lorenz, Chris D. and Travesset, A.},
doi = {10.1016/j.jcp.2008.01.047},
isbn = {0021-9991},
issn = {00219991},
journal = {Journal of Computational Physics},
keywords = {CUDA,GPU,Graphics processing unit,Molecular dynamics,NVIDIA,Polymer systems},
month = {may},
number = {10},
pages = {5342--5359},
pmid = {255447000027},
publisher = {Academic Press},
title = {{General purpose molecular dynamics simulations fully implemented on graphics processing units}},
url = {https://www.sciencedirect.com/science/article/pii/S0021999108000818?via{\%}3Dihub},
volume = {227},
year = {2008}
}
@article{Glaser2015f,
abstract = {We describe a highly optimized implementation of MPI domain decomposition in a GPU-enabled, general-purpose molecular dynamics code, HOOMD-blue (Anderson and Glotzer, 2013). Our approach is inspired by a traditional CPU-based code, LAMMPS (Plimpton, 1995), but is implemented within a code that was designed for execution on GPUs from the start (Anderson et al.; 2008). The software supports short-ranged pair force and bond force fields and achieves optimal GPU performance using an autotuning algorithm. We are able to demonstrate equivalent or superior scaling on up to 3375 GPUs in Lennard-Jones and dissipative particle dynamics (DPD) simulations of up to 108 million particles. GPUDirect RDMA capabilities in recent GPU generations provide better performance in full double precision calculations. For a representative polymer physics application, HOOMD-blue 1.0 provides an effective GPU vs. CPU node speed-up of 12.5Ã—.},
archivePrefix = {arXiv},
arxivId = {1412.3387},
author = {Glaser, Jens and Nguyen, Trung Dac and Anderson, Joshua A. and Lui, Pak and Spiga, Filippo and Millan, Jaime A. and Morse, David C. and Glotzer, Sharon C.},
doi = {10.1016/j.cpc.2015.02.028},
eprint = {1412.3387},
issn = {00104655},
journal = {Computer Physics Communications},
keywords = {Domain decomposition,LAMMPS,MPI/CUDA,Molecular dynamics,Multi-GPU,Strong scaling,Weak scaling},
month = {jul},
pages = {97--107},
publisher = {North-Holland},
title = {{Strong scaling of general-purpose molecular dynamics simulations on GPUs}},
url = {https://www.sciencedirect.com/science/article/pii/S0010465515000867?via{\%}3Dihub},
volume = {192},
year = {2015}
}
